AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "This is an AWS Lambda function that collects CloudWatch logs and sends them to HyperDX in bulk, over HTTP."
Parameters:
  hyperdxListener:
    Type: "String"
    Description: "The HyperDX listener URL for your region."
    Default: 'https://in.hyperdx.io'
  hyperdxToken:
    Type: "String"
    Description: "HyperDX account token."
  hyperdxType:
    Type: "String"
    Description: "The log type you'll use with this Lambda. Please note that you should create a new Lambda for each log type you use. This can be a built-in log type, or your custom log type"
    Default: "hyperdx_cloudwatch_lambda"
  hyperdxFormat:
    Type: "String"
    Description: "JSON or text. If json, the lambda function will attempt to parse the message field as JSON and populate the event data with the parsed fields."
    Default: "text"
    AllowedValues:
      - "text"
      - "json"
  hyperdxCompress:
    Type: "String"
    Description: "If true, the Lambda will send compressed logs. If false, the Lambda will send uncompressed logs."
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
  hyperdxEnrich:
    Type: "String"
    Description: "Enriches the CloudWatch events with custom properties at ship time. The format is `key1=value1;key2=value2`. By default is empty."
    Default: ""
  logGroup:
    Type: "String"
    Description: "CloudWatch Log Group name from where you want to send logs."
    Default: ""
  shipperLogLevel:
    Type: "String"
    Description: "Log level of the shipping Lambda function."
    AllowedValues:
      - "DEBUG"
      - "INFO"
      - "WARNING"
      - "ERROR"
      - "CRITICAL"
    Default: "INFO"
  requestTimeout:
    Type: "Number"
    Description: "Timeout in seconds for each http request for sending logs into logz.io"
    MinValue: 0
    Default: 15
Outputs:
  HyperDXCloudwatchLogsLambda:
    Description: "HyperDX CW logs lambda ARN"
    Value: !GetAtt HyperDXCloudwatchLogsLambda.Arn
Resources:
  HyperDXCloudwatchLogsLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: python3.9
      Handler: lambda_function.lambda_handler
      CodeUri:
        Bucket: logzio-aws-integrations-<<REGION>>
        Key: cloudwatch-auto-deployment/<<VERSION>>/logzio-cloudwatch.zip
      FunctionName: !Ref AWS::StackName
      MemorySize: 512
      Timeout: 60
      Events:
        LOsubscription0:
          Type: CloudWatchLogs
          Properties:
            LogGroupName: !Ref logGroup
            FilterPattern: "" #Match everything
      Environment:
        Variables:
          LISTENER_URL: !Ref hyperdxListener
          TOKEN: !Ref hyperdxToken
          TYPE: !Ref hyperdxType
          FORMAT: !Ref hyperdxFormat
          COMPRESS: !Ref hyperdxCompress
          ENRICH: !Ref hyperdxEnrich
          SHIPPER_LOG_LEVEL: !Ref shipperLogLevel
          REQUEST_TIMEOUT: !Ref requestTimeout
